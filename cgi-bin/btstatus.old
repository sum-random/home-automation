#!/usr/local/bin/bash

exec 2>&1

SCALING=1
echo "$HTTP_USER_AGENT" | grep -q "UP.Browser" && SCALING=12
echo "$HTTP_USER_AGENT" | grep -q "BlackBerry" && SCALING=32
PATH="$PATH:/usr/local/bin"
BTHOME="/home/ctucker/bt"
LOG=/tmp/torrent.log

start_torrent() { 
  NXT=`ls $BTHOME/work/ | grep torrent | head -1`
  if [ -z "$NXT" ] ; then
    CNT=`ls $BTHOME | grep torrent | wc -l`
    POS=`expr $RANDOM % $CNT + 1`
    NXT=`ls $BTHOME | grep torrent | head -$POS | tail -1`
    sudo mkdir -p $BTHOME/work
    sudo mv "$BTHOME/$NXT" "$BTHOME/work/"
  fi
  echo "Rotate log"
  [ -f $LOG ] && (sudo mv $LOG $LOG.old ; cat $LOG.old | tail -1000 >$LOG ; sudo rm -f $LOG.old;)
  echo "Starting $NXT"
  MAXUP=" --max_upload_rate 10000 "
  MAXIN=" --max_initiate 50 "
  MAXAL=" --max_allow_in 60 "
  SAVIN=" --save_in $BTHOME/downloads/ --save_incomplete_in $BTHOME/incomplete "
  VRBSE=" --spew "
  NEWCN=" --rerequest_interval 60 "
  DATDR=" --data_dir $BTHOME/console "

  [ -n "$BTHOME/$NXT" ] && sudo /usr/local/bin/bittorrent-console $MAXUP $MAXIN $MAXAL $SAVIN $VRBSE $NEWCN $DATDR "$BTHOME/work/$NXT" 2>&1 >>$LOG &
}


ACTIVE="no"
ps wwaux | grep -v grep | grep -q python && ACTIVE="yes"

set >>/usr/local/www/apache24/cgi-data/set.txt
echo "Content-type: text/html; charset=iso-8859-1"
echo
echo "<HTML><HEAD>"
echo "<TITLE>BitTorrent Monitor</TITLE>"
echo "<meta http-equiv='Refresh' content='40; url=/cgi-bin/btstatus'>"
echo "</HEAD>"
echo "<BODY>"
echo "<PRE>"
OPTS="`echo $QUERY_STRING | tr \& "\n" | grep =`"
# Decode the form data
(echo $QUERY_STRING ; cat -) | tr '&' "\n" | while read opt ; do
   NAME=`echo $opt | sed 's/=/ /g' | awk '{print $1}'`
   VALUE="`echo $opt | sed 's/=/ /g' | awk '{print $2}' | \
          sed 's,%,\\\x,g' | \
          sed 's~\\\x2C~,~g' | \
          sed 's/+/ /g'`"
   echo "$NAME $VALUE"
   if [ "$NAME" = "ACT" ] && [ "$VALUE" = "NXT" ] ; then
     PYPID=`ps wwaux | grep -v grep | grep python | awk '{print $2}'`
     sudo kill -9 $PYPID 
     sudo mv -v $BTHOME/work/*torrent $BTHOME/wait/ 
     sudo /usr/local/bin/bash /usr/local/www/apache24/cgi-bin/btrun.sh 
     #start_torrent
   elif [ "$NAME" = "RESTORESKIP" ] && [ -f "$BTHOME/wait/$VALUE" ] ; then
     sudo mv -v $BTHOME/wait/$VALUE $BTHOME/ 
   elif [ "$NAME" = "DELETESKIP" ] && [ -f "$BTHOME/wait/$VALUE" ] ; then
     sudo rm -fv $BTHOME/wait/$VALUE  
   fi
done
echo "</PRE>"

if [ "$ACTIVE" = "yes" ] ; then
  echo "<H1>Current download</H1>"
  echo "<TABLE BORDER='1' CELLSPACING='1' CELLPADDING='1'><TR><TH>Metric</TH><TH>Value</TH></TR>"
  RNIT="tail -20000 $LOG "
  PRIT=" tail -3 2>/dev/null | head -1 | cut -d : -f 2-"
  echo "<TR><TD>BT Process</TD><TD>`ps wwaux | grep -v grep | grep python`</TD></TR>"
  echo "<TR><TD>Disk file</TD><TD>`ls -l $BTHOME/work | grep torrent$`</TD></TR>"
  echo "<TR><TD>Current file</TD><TD>`eval "$RNIT | grep saving: | $PRIT"`</TD></TR>"
  echo "<TR><TD>File size</TD><TD>`eval "$RNIT | grep file\ size: | $PRIT"`</TD></TR>"
  echo "<TR><TD>Percent done</TD><TD>`eval "$RNIT | grep percent\ done: | $PRIT"`</TD></TR>"
  if echo "$HTTP_USER_AGENT" | grep -q "BlackBerry" ; then 
    echo "<TR><TD>Download</TD><TD>`tail -20000 $LOG | grep download\ rate | cut -d : -f 2 | tail -2 | head -1`</TD></TR>"
    echo "<TR><TD>Upload</TD><TD>`tail -20000 $LOG | grep upload\ rate | cut -d : -f 2 | tail -2 | head -1`</TD></TR>"
  else
    MAXPD=`grep percent\ done $LOG | sort | uniq -c | awk '{print $1}' | tail -100 | sort -n | tail -1`
    BLVAL=(`grep percent\ done $LOG | sort | uniq -c | awk '{print $1}' | tail -100 | sed -e 's/0*\(.*\)/\1/g'` `LNCNT=0;while [ $((LNCNT++)) -lt 100 ] ; do echo "0 " ; done`)
    SCALE=`tail -20000 $LOG | grep load\ rate: | tail -222 | grep -v '\-\-\-' | awk '{print $3}' | sort -n | tail -1`
    MAX=`echo $SCALE | tr -d '\.'`
    MAX=`expr $MAX + 1`
    MAXSR=`grep share\ rating $LOG | grep -v "  oo  " | awk '{print $3}' | tr -d "\." | cut -b 1-3 | tail -100 | sort -n | tail -1`
    [ $MAXSR -lt 100 ] && MAXSR=100
    MAXSC=`grep share\ rating $LOG  | awk '{print $3}' | tr -d '\.' | cut -b 1-3 | uniq -c | sort -n | awk '{print $1}' | tail -1`
    if echo "$HTTP_USER_AGENT" | grep -q "UP.Browser" ; then 
      echo "<TR><TD>Scale</TD><TD><TABLE STYLE='width:100%;'><TR><TD STYLE='width:50%;text-align:left;'>|&#60;&nbsp;0</TD><TD STYLE='width:50%;text-align:right;'>$SCALE Kb/s&nbsp;&#62;|</TD></TR></TABLE></TD></TR>"
    else
      echo "<TR><TD>Scale</TD><TD><TABLE STYLE='width:100%;'><TR><TD STYLE='width:33%;text-align:left;'>|&#60;&nbsp;0</TD><TD STYLE='width:34%;text-align:center;'>.....</TD><TD STYLE='width:33%;text-align:right;'>$SCALE Kb/s&nbsp;&#62;|</TD></TR></TABLE></TD></TR>"
    fi
    echo "<TR><TD>History</TD><TD>"
    GRVAL=(`tail -20000 $LOG | grep download\ rate: | grep -v '\-\-\-' | tail -101 2>/dev/null | head -100 | tr \  : | cut -d : -f 5 | tr -d '\.' | sed -e 's/0*\(.*\)/\1/g'`)
    RDVAL=(`tail -20000 $LOG | grep upload\ rate: | grep -v '\-\-\-' | tail -101 2>/dev/null | head -100 | tr \  : | cut -d : -f 7 | tr -d '\.' | sed -e 's/0*\(.*\)/\1/g'`)
    SRVAL=(`grep share\ rating $LOG  | awk '{print $3}' | grep [0-9]\.[0-9][0-9][0-9] | tr -d '\.' | cut -b 1-3 | tail -100 | sed -e 's/oo/100/'`)
    LNCNT=0;while [ $LNCNT -lt 100 ] ; do RP=0; [ -n "${RDVAL[LNCNT]}" ] && RP=$((${RDVAL[LNCNT]} * 100 / $MAX)); GP=0; [ -n "${GRVAL[LNCNT]}" ] && GP=$((${GRVAL[LNCNT]} * 100 / $MAX)); [ $RP -gt 0 ] && echo "<DIV STYLE='background-color:#`printf "%02x00%02x" $((RDVAL[LNCNT] * 255 / $MAX)) $((SRVAL[LNCNT] * 255 / $MAXSR))`;width:$RP%;height:1px;'> </DIV>"; [ $GP -gt 0 ] && echo "<DIV STYLE='background-color:#00`printf "%02x%02x" $((GRVAL[LNCNT] * 255 / $MAX)) $((BLVAL[LNCNT] * 255 / $MAXPD))`;width:$GP%;height:1px;'> </DIV>"; LNCNT=$((LNCNT + 1)); done
    echo "</TD></TR>"
  fi
  echo "<TR><TD>Time left</TD><TD>`eval "$RNIT | grep time\ left: | $PRIT"`</TD></TR>"
  echo "<TR><TD>Share rating</TD><TD>`eval "$RNIT | grep share\ rating: | $PRIT"`</TD></TR>"
  echo "<TR><TD>Seed status</TD><TD>`eval "$RNIT | grep seed\ status: | $PRIT"`</TD></TR>"
  echo "<TR><TD>Peer status</TD><TD>`eval "$RNIT | grep peer\ status: | $PRIT"`</TD></TR>"
  echo "</TABLE>"
fi
echo "Click <A HREF='/cgi-bin/btstatus?ACT=NXT'>here</A> skip this torrent<BR>"
if [ `ls $BTHOME/downloads | grep torrent$ | wc -l` -gt 0 ] ; then
  echo "<H1>Finished torrents</H1>"
  echo "<TABLE BORDER='1' CELLPADING='1' CELSPACING='1' WIDTH='1024'><TR><TH>File</TH><TH>Data</TH></TR>"
  ls $BTHOME/downloads/ | grep torrent$ | while read TFILE ; do
     echo "<TR><TD>$TFILE</TD><TD>"
     strings $BTHOME/downloads/$TFILE | grep announce | tr "[]()[]:" "\n\n\n\n\n\n\n"
     echo "</TD></TR>"
  done
  echo "</TABLE>"
fi 
if [ `ls $BTHOME/ | grep torrent$ | wc -l` -gt 0 ] ; then
echo "<H1>Waiting files</H1>"
  echo "<TABLE BORDER='1' CELLPADING='1' CELSPACING='1' WIDTH='1024'><TR><TH>Date</TH><TH>File</TH><TH>Data</TH></TR>"
  cd $BTHOME
  ls $BTHOME/ | grep torrent | while read TFILE ; do 
   ls -l $TFILE | awk '{print "<TR><TD>"$6" "$7"</TD><TD>"$9"</TD><TD>"}'
   strings $TFILE | grep announce | tr "[]()[]:" "\n\n\n\n\n\n\n"
   echo "</TD></TR>"
  done
  echo "</TABLE>"
fi
if [ `ls $BTHOME/wait | grep torrent$ | wc -l` -gt 0 ] ; then
  echo "<H1>Skipped torrents</H1>"
  echo "<FORM METHOD='POST'>"
  echo "<TABLE BORDER='1' CELLPADING='1' CELSPACING='1' WIDTH='1024'><TR><TH>File</TH><TH>Data</TH><TH>Activate</TH><TH>Delete</TH></TR>"
  ls $BTHOME/wait | grep torrent$ | while read TFILE ; do
     echo "<TR><TD>$TFILE"
     echo "</TD><TD>"
     strings $BTHOME/wait/$TFILE | grep announce | tr "[]()[]:" "\n\n\n\n\n\n\n"
     echo "</TD><TD>"
     echo "<INPUT TYPE='CHECKBOX' NAME='RESTORESKIP' VALUE='$TFILE'>"
     echo "</TD><TD>"
     echo "<INPUT TYPE='CHECKBOX' NAME='DELETESKIP' VALUE='$TFILE'>"
     echo "</TD></TR>"
  done
  echo "</TABLE>"
  echo "<INPUT TYPE='HIDDEN' NAME='SPACER' VALUE='NOTHING'>"
  echo "<INPUT TYPE='SUBMIT'>"
  echo "</FORM>"
  echo "$HTTP_USER_AGENT<BR>"
fi 
echo "</BODY></HTML>"

